import{_ as e,c as p,a as t,o as s}from"./app-CQD-WTX3.js";const l={};function r(n,a){return s(),p("div",null,a[0]||(a[0]=[t('<p>漏洞级别：高危 漏洞内容：AB账号越权（使用低权限的账号，发送高权限账号才有的请求） 漏洞危害：越权查看管理员的敏感信息 信息收集：小蓝本 测试目标：APP=WEB 测试方法：改ID</p><blockquote><p>学了很多，但是挖不到东西？刀在于快，而不在于大。学东西在于精，而不在于杂。</p></blockquote><h4 id="_1-信息收集" tabindex="-1"><a class="header-anchor" href="#_1-信息收集"><span>1. 信息收集：</span></a></h4><h5 id="思考-为什么测试app" tabindex="-1"><a class="header-anchor" href="#思考-为什么测试app"><span>思考：为什么测试APP？</span></a></h5><ol><li>漏洞的挖掘其实本身就是与业务功能的对抗，功能越多的地方，则漏洞越多。</li><li>功能越多意味着实现逻辑越复杂，逻辑越复杂也是可能存在漏洞。即便漏洞修复，也是增加新的逻辑，那就可能导致新的漏洞。 因此发现漏洞的概率也越高。</li></ol><p><em><strong>逻辑漏洞，是漏扫很难发现的</strong></em></p><h5 id="其次-为什么要挑选大厂去进行对抗" tabindex="-1"><a class="header-anchor" href="#其次-为什么要挑选大厂去进行对抗"><span>其次：为什么要挑选大厂去进行对抗？</span></a></h5><p>公司越大，开发需求越多，在此情况下，需求就被分包出去，给到外包，层层外包之后，可能会给到新人进行开发，这样就可能会出现漏洞。 这样出现的逻辑漏洞，是漏扫很难发现的。 当然每个逻辑写完之后，大厂会进行测试。但是如果不是A类的业务，那么测试人员就有可能会出现不测试或者漏测的情况（驻场人员完成指标之后，就可能会停）。</p><p>通过小蓝云对厂商的app进行信息收集，找出了两百多个APP</p><h4 id="_2-漏洞测试" tabindex="-1"><a class="header-anchor" href="#_2-漏洞测试"><span>2. 漏洞测试</span></a></h4><p>心法：只要把重心放在越权上面，上来先准备两个账号。无论是平行越权，还是纵向越权，还是数据对比，还是数据切换，制造都会用到。</p><blockquote><p>不要想着将来没有产出怎么办(这样会操作变形)，而是要把重心放在如何才能够有产出。</p></blockquote><ol><li>访问app 发现，可以创建团队，也可以加入团队，我既可以是管理员，也可以是其他团队的成员，这就是一个典型的上下权限层级管理开发功能点。 第一时间思考：</li></ol><ul><li>权限是否可以越权（从一个普通的团员变成管理员，拥有管理员的权限）</li><li>信息是否可以平行、纵向越权（查看团员的信息，管理员的信息）</li></ul><p>通过抓取包的时候，发现了大量的敏感信息。越权要多观察id（字段名不同，但是值相同）</p><p>根据返回的数据包，可以看到团队的名字，手机号，邮箱等。</p><p>回到返回的数据包部分，可以通过观察别的团队，例如查看团队，并且通过抓包拿到别的团队的ID，进行ID替换，这样就可以获取到其他团队的敏感信息，因此该段，会导致全站所有团队的敏感信息泄露。（比如团队的信息泄露，可以单独联系上管理员）</p><p><em><strong>题外话</strong></em>：观察到返回包的数据中的is_admin字段，这个字段是在管理员包中，而普通用户没有的。对普通用户的返回包进行修改，增加is_admin字段，尝试提升普通用户的权限。在此情况下，普通用户的前端界面可能没有出现管理员的界面，但是实际已经有可能提升了权限。那么使用管理员进行发包并且拦截，对发出的包进行拦截。然后对拦截的包进行修改，冒充管理员同意成员审核。</p>',18)]))}const i=e(l,[["render",r],["__file","src-1.html.vue"]]),c=JSON.parse('{"path":"/docs/red/src-1.html","title":"时效性SRC挖掘分享","lang":"en-US","frontmatter":{"title":"时效性SRC挖掘分享","date":"2025/02/26"},"headers":[],"git":{},"filePathRelative":"docs/red/src-1.md"}');export{i as comp,c as data};
